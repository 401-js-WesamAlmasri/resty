{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Form/Form.js","components/Results/Results.js","components/History/History.js","Pages/Home/Home.js","Pages/History/History.js","Pages/Help/Help.js","App.js","index.js"],"names":["Header","className","to","Footer","superagent","require","Form","props","onChangeHandler","bind","onSubmitHandler","e","this","updateFormHandler","target","name","value","a","preventDefault","updateResultsHandler","method","url","set","accept","send","body","response","count","length","headers","storeObj","prevRequests","JSON","parse","localStorage","getItem","filter","req","push","updateHistoryHandler","setItem","stringify","message","onSubmit","htmlFor","onChange","type","id","defaultChecked","placeholder","cols","rows","React","Component","Results","condition","loading","results","data","error","History","onClickHandler","history","map","index","onClick","Home","state","setState","form","location","reqInfo","handleClickInfo","onClickReRun","Help","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d75baba2.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return <header className='header'>\n    <div className='logo'>\n      RESTy\n    </div>\n    <nav>\n      <ul className='nav-list'>\n        <li className='nav-link'>\n          <Link to='/'>Home</Link>\n        </li>\n        <li className='nav-link'>\n          <Link to='/history'>History</Link>\n        </li>\n        <li className='nav-link'>\n          <Link to='/help'>Help</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>;\n};\n\nexport default Header;","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n  return <footer className='footer'>&copy; 2021 Code Fellows</footer>;\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Form.scss';\nconst superagent = require('superagent');\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  onChangeHandler(e) {\n    this.props.updateFormHandler({[e.target.name]: e.target.value})\n  }\n\n  async onSubmitHandler(e) {\n    e.preventDefault();\n    this.props.updateResultsHandler(null, null, null, null, true);\n\n    try {\n      const response = await superagent[this.props.method](this.props.url)\n          .set('Content-Type', 'application/json')\n          .accept('application/json')\n          .send(this.props.body);\n      this.props.updateResultsHandler(\n        response.body.count || response.body.length,\n        response.headers,\n        response.body,\n        null,\n        false\n      );\n      const storeObj = {\n        url: this.props.url,\n        method: this.props.method,\n        body: this.props.body\n      }\n      const prevRequests = JSON.parse(localStorage.getItem('requests')); // [{url, method, body}, {}, ...]\n      if(!prevRequests){\n        localStorage.setItem('requests', JSON.stringify([storeObj]));\n        this.props.updateHistoryHandler([storeObj]);\n      } else if(prevRequests.filter(req => req.url === storeObj.url && req.method === storeObj.method && req.body === storeObj.body).length < 1) {\n        prevRequests.push(storeObj);\n        this.props.updateHistoryHandler(prevRequests);\n        localStorage.setItem('requests', JSON.stringify(prevRequests));\n      }\n    } catch (e) {\n      this.props.updateResultsHandler(null, null, null, e.message, false);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.onSubmitHandler} className='form'>\n          <div className='url_container'>\n            <label htmlFor='url'>\n              <input\n                onChange={this.onChangeHandler}\n                type='url'\n                value={this.props.url}\n                name='url'\n                id='url'\n              />\n            </label>\n            <button type='submit'>GO!</button>\n          </div>\n          <div className='methods_container'>\n            <div onChange={this.onChangeHandler}>\n              <label\n                htmlFor='get-method'\n                className={`${this.props.method === 'get' ? 'active' : ''}`}\n              >\n                GET\n                <input\n                  defaultChecked\n                  type='radio'\n                  value='get'\n                  name='method'\n                  id='get-method'\n                />\n              </label>\n              <label\n                htmlFor='post-method'\n                className={`${this.props.method === 'post' ? 'active' : ''}`}\n              >\n                POST\n                <input\n                  type='radio'\n                  value='post'\n                  name='method'\n                  id='post-method'\n                />\n              </label>\n              <label\n                htmlFor='put-method'\n                className={`${this.props.method === 'put' ? 'active' : ''}`}\n              >\n                PUT\n                <input type='radio' value='put' name='method' id='put-method' />\n              </label>\n              <label\n                htmlFor='delete-method'\n                className={`${this.props.method === 'delete' ? 'active' : ''}`}\n              >\n                DELETE\n                <input\n                  type='radio'\n                  value='delete'\n                  name='method'\n                  id='delete-method'\n                />\n              </label>\n            </div>\n            <textarea\n              className='req-body'\n              placeholder='Request body'\n              name='body'\n              id='body'\n              cols='30'\n              rows='10'\n              value={this.props.body}\n              onChange={this.onChangeHandler}\n            ></textarea>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport './Results.scss';\nimport { If, Then, Else } from 'react-if';\n\nfunction Results(props) {\n\n  return (\n    <>\n    <div className='results_container'>\n      <If condition={props.loading}>\n          <Then>\n              <div className='loading'></div>\n          </Then>\n          <Else>\n            <If condition={props.results !== null}>\n              <Then>\n                <h2>Headers</h2>\n                <JSONPretty\n                  id='json-pretty'\n                  data={{\n                    headers: props.headers,\n                  }}\n                  />\n\n                <h2>Count</h2>\n                <span>{props.count}</span>\n\n                <h2>Results</h2>\n                <JSONPretty\n                  id='json-pretty'\n                  data={{\n                    results: props.results,\n                  }}\n                  />\n              </Then>\n              <Else>\n                  <div className='error'>{props.error}</div>\n              </Else>\n            </If>\n          </Else>\n      </If>\n    </div>\n      {/* <div className='results_container'>\n        {props.results !== null ? (\n          <>\n            <h2>Headers</h2>\n            <JSONPretty\n              id='json-pretty'\n              data={{\n                headers: props.headers,\n              }}\n            />\n\n            <h2>Count</h2>\n            <span>{props.count}</span>\n\n            <h2>Results</h2>\n            <JSONPretty\n              id='json-pretty'\n              data={{\n                results: props.results,\n              }}\n            />\n          </>\n        ) : (\n          <div className='error'>{props.error}</div>\n        )}\n      </div> */}\n    </>\n  );\n}\n\nexport default Results;\n","import React from 'react';\nimport './History.scss';\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  onClickHandler(req) {\n    this.props.updateFormHandler({ \n        url: req.url,\n        method: req.method,\n        body: req.body\n     });\n  }\n\n  render() {\n    return (\n      <div className='history_container'>\n        {this.props.history && this.props.history.map((req, index) => {\n          return (\n            <div key={index} className='history_row'>\n              <span\n                className={`method ${req.method}`}\n                onClick={() => this.onClickHandler(req)}\n              >\n                {req.method}\n              </span>\n              <span className='urls'>{req.url}</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default History;\n","import React from 'react';\nimport Form from '../../components/Form/Form';\nimport './Home.scss';\nimport Results from '../../components/Results/Results';\nimport History from '../../components/History/History';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: null,\n      headers: null,\n      results: null,\n      error: null,\n      loading: false,\n      history: [],\n      url: 'https://swapi.dev/api/people/',\n      method: 'get',\n      body: ''\n    };\n\n    this.updateResultsHandler = this.updateResultsHandler.bind(this);\n    this.updateHistoryHandler = this.updateHistoryHandler.bind(this);\n    this.updateFormHandler = this.updateFormHandler.bind(this);\n  }\n\n  updateResultsHandler(count, headers, results, error, loading) {\n    this.setState({ count, headers, results, error, loading });\n  }\n\n  updateHistoryHandler(history) {\n    this.setState({ history });\n  }\n  \n  updateFormHandler(form) {\n    this.setState({ ...form });\n  }\n\n  componentDidMount(){\n    if(this.props.location.state){\n      this.setState({ ...this.props.location.state});\n    }\n    const history = JSON.parse(localStorage.getItem('requests'));\n    this.setState({history});\n  }\n\n  render() {\n    return (\n      <div className='Home'>\n        <Form\n          url={this.state.url}\n          method={this.state.method}\n          body={this.state.body}\n          updateFormHandler={this.updateFormHandler}\n          updateResultsHandler={this.updateResultsHandler}\n          updateHistoryHandler={this.updateHistoryHandler}\n           />\n        <div className='results_body'>\n          <History \n            history={this.state.history}\n            updateFormHandler={this.updateFormHandler}\n          />\n          <Results\n            count={this.state.count}\n            headers={this.state.headers}\n            results={this.state.results}\n            error={this.state.error}\n            loading={this.state.loading}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './History.scss';\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [],\n      reqInfo: {},\n    };\n    this.handleClickInfo = this.handleClickInfo.bind(this);\n    this.onClickReRun = this.onClickReRun.bind(this);\n  }\n\n  handleClickInfo(reqInfo){\n      this.setState({reqInfo})\n  }\n\n  onClickReRun(){\n    this.props.history.push('/', this.state.reqInfo);\n  }\n\n  componentDidMount() {\n      const history = JSON.parse(localStorage.getItem('requests'));\n      this.setState({ history });\n    }\n    render() {\n    return (\n      <div className='history'>\n        <div className='history_elements'>\n            <h2 className=\"history_title\">History of previous requests</h2>\n          {this.state.history &&\n            this.state.history.map((req, index) => {\n              return (\n                <div key={index} className='history_row'>\n                  <span\n                    className={`method ${req.method}`}\n                      onClick={() => this.handleClickInfo(req)}\n                  >\n                    {req.method}\n                  </span>\n                  <span className='urls'>{req.url}</span>\n                </div>\n              );\n            })}\n        </div>\n        {this.state.reqInfo.url && (\n          <div className='info'>\n            <h2>Request Information </h2>\n            <p>Url: {this.state.reqInfo.url}</p>\n            <p>\n              Method: {this.state.reqInfo.method}\n            </p>\n            <p>Body: {this.state.reqInfo.body || 'No body'}</p>\n            <button className='re-run-btn' onClick={this.onClickReRun} >Re-run</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default History;\n","import React from 'react';\nimport './Help.scss';\n\nfunction Help() {\n    return (\n        <div className='help_container'>\n           <h2>How to use the app?</h2>\n           <p>Simply follow the instructions below to send requests to your favorite api and get the response.</p>\n           <h3>Send a request:</h3>\n           <ul>\n               <li>Open the home page</li>\n               <li>Type the endpoint in the text input field at the top of the page</li>\n               <li>Choose the method you want from the methods button Get, Post, Put and Delete</li>\n               <li>Fill the body in the textarea if the request needs it </li>\n               <li>Click on Go button and when the app receive the response, it will be shown in the right side of page with the headers</li>\n           </ul>\n           <h3>Review previous requests</h3>\n           <ul>\n               <li>You can see a list of previous requests that you have made before in the right side of the home page</li>\n               <li>Click on the method name in this list to get the data of that request filled in the form if you want to re run the request</li>\n               <li>You can also go to History page in the navbar and check the previous requests from there too</li>\n               <li>Click on the method name to see full information about the request on the right side of the page</li>\n               <li>There will be a re-run button, you can click on it to go back to the home page with the form filled with the request data</li>\n           </ul>\n        </div>\n    )\n}\n\nexport default Help;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Home from './Pages/Home/Home';\nimport History from './Pages/History/History';\nimport Help from './Pages/Help/Help';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className='app'>\n        <Header />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/history' component={History} />\n            <Route exact path='/help' component={Help} />\n          </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router  } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}