{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","components/Footer/Footer.js","components/Results/Results.js","App.js","index.js"],"names":["Header","className","Form","props","state","url","method","body","onChangeHandler","bind","onSubmitHandler","e","this","setState","target","name","value","a","preventDefault","updateResultsHandler","requestOptions","headers","JSON","parse","fetch","response","json","jsonResponse","status","statusText","count","get","results","message","onSubmit","htmlFor","type","onChange","id","defaultChecked","placeholder","cols","rows","React","Component","Footer","Results","loading","data","error","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83f0205f.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nconst Header = () => {\n  return <header className='header'>RESTy</header>;\n};\n\nexport default Header;","import React from 'react';\nimport './Form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: 'https://swapi.dev/api/people/',\n      method: 'get',\n      body: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  onChangeHandler(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async onSubmitHandler(e) {\n    e.preventDefault();\n    this.props.updateResultsHandler(null, null, null, null, true);\n\n    try {\n      const requestOptions = {\n        method: this.state.method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: this.state.method !== 'get' ? JSON.parse(`${this.state.body}`) : null,\n      };\n\n      const response = await fetch(this.state.url, requestOptions);\n      const jsonResponse = await response.json();\n\n      if(response.status > 399){\n        this.props.updateResultsHandler(null, null, null, response.statusText, false);\n        return;\n      }\n      this.props.updateResultsHandler(\n        jsonResponse.count,\n        response.headers.get('content-type'),\n        jsonResponse.results,\n        null,\n        false\n      );\n    } catch (e) {\n      this.props.updateResultsHandler(null, null, null, e.message, false);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.onSubmitHandler} className='form'>\n          <div className='url_container'>\n            <label htmlFor='url'>\n              <input\n                type='url'\n                onChange={this.onChangeHandler}\n                value={this.state.url}\n                name='url'\n                id='url'\n              />\n            </label>\n            <button type='submit'>GO!</button>\n          </div>\n          <div onChange={this.onChangeHandler} className='methods_container'>\n            <div>\n              <label\n                htmlFor='get-method'\n                className={`${this.state.method === 'get' ? 'active' : ''}`}\n              >\n                GET\n                <input\n                  defaultChecked\n                  type='radio'\n                  value='get'\n                  name='method'\n                  id='get-method'\n                />\n              </label>\n              <label\n                htmlFor='post-method'\n                className={`${this.state.method === 'post' ? 'active' : ''}`}\n              >\n                POST\n                <input\n                  type='radio'\n                  value='post'\n                  name='method'\n                  id='post-method'\n                />\n              </label>\n              <label\n                htmlFor='put-method'\n                className={`${this.state.method === 'put' ? 'active' : ''}`}\n              >\n                PUT\n                <input type='radio' value='put' name='method' id='put-method' />\n              </label>\n              <label\n                htmlFor='delete-method'\n                className={`${this.state.method === 'delete' ? 'active' : ''}`}\n              >\n                DELETE\n                <input\n                  type='radio'\n                  value='delete'\n                  name='method'\n                  id='delete-method'\n                />\n              </label>\n            </div>\n            <textarea\n              className='req-body'\n              placeholder='Request body'\n              name='body'\n              id='body'\n              cols='30'\n              rows='10'\n            ></textarea>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n  return <footer className='footer'>&copy; 2021 Code Fellows</footer>;\n}\n\nexport default Footer;\n","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport './Results.scss';\n\nfunction Results(props) {\n\n    if (props.loading) {\n    return (\n      <div className='results_container'>\n        <div className='loading'>Loading</div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <div className='results_container'>\n        {props.results !== null ? (\n          <>\n            <h2>Headers</h2>\n            <JSONPretty\n              id='json-pretty'\n              data={{\n                headers: props.headers,\n              }}\n            />\n\n            <h2>Count</h2>\n            <span>{props.count}</span>\n\n            <h2>Results</h2>\n            <JSONPretty\n              id='json-pretty'\n              data={{\n                results: props.results,\n              }}\n            />\n          </>\n        ) : (\n          <div className='error'>{props.error}</div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Results;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\nimport Footer from './components/Footer/Footer';\nimport './App.scss';\nimport Results from './components/Results/Results';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: null,\n      headers: null,\n      results: null,\n      error: null,\n      loading: false,\n    };\n\n    this.updateResultsHandler = this.updateResultsHandler.bind(this);\n  }\n\n  updateResultsHandler(count, headers, results, error, loading) {\n    this.setState({ count, headers, results, error, loading });\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Header />\n        <Form updateResultsHandler={this.updateResultsHandler} />\n        <div className='results_body'>\n          <Results\n            count={this.state.count}\n            headers={this.state.headers}\n            results={this.state.results}\n            error={this.state.error}\n            loading={this.state.loading}\n          />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}