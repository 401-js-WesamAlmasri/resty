{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","components/Footer/Footer.js","components/Results/Results.js","components/History/History.js","App.js","index.js"],"names":["Header","className","superagent","require","Form","props","onChangeHandler","bind","onSubmitHandler","e","this","updateFormHandler","target","name","value","a","preventDefault","updateResultsHandler","method","url","set","accept","send","body","response","count","length","headers","storeObj","prevRequests","JSON","parse","localStorage","getItem","filter","req","push","updateHistoryHandler","setItem","stringify","message","onSubmit","htmlFor","onChange","type","id","defaultChecked","placeholder","cols","rows","React","Component","Footer","Results","condition","loading","results","data","error","History","onClickHandler","history","map","index","onClick","App","state","setState","form","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e1b62a6.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nconst Header = () => {\n  return <header className='header'>RESTy</header>;\n};\n\nexport default Header;","import React from 'react';\nimport './Form.scss';\nconst superagent = require('superagent');\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  onChangeHandler(e) {\n    this.props.updateFormHandler({[e.target.name]: e.target.value})\n  }\n\n  async onSubmitHandler(e) {\n    e.preventDefault();\n    this.props.updateResultsHandler(null, null, null, null, true);\n\n    try {\n      const response = await superagent[this.props.method](this.props.url)\n          .set('Content-Type', 'application/json')\n          .accept('application/json')\n          .send(this.props.body);\n      this.props.updateResultsHandler(\n        response.body.count || response.body.length,\n        response.headers,\n        response.body,\n        null,\n        false\n      );\n      const storeObj = {\n        url: this.props.url,\n        method: this.props.method,\n        body: this.props.body\n      }\n      const prevRequests = JSON.parse(localStorage.getItem('requests')); // [{url, method, body}, {}, ...]\n      if(!prevRequests){\n        localStorage.setItem('requests', JSON.stringify([storeObj]));\n        this.props.updateHistoryHandler([storeObj]);\n      } else if(prevRequests.filter(req => req.url === storeObj.url && req.method === storeObj.method && req.body === storeObj.body).length < 1) {\n        prevRequests.push(storeObj);\n        this.props.updateHistoryHandler(prevRequests);\n        localStorage.setItem('requests', JSON.stringify(prevRequests));\n      }\n    } catch (e) {\n      this.props.updateResultsHandler(null, null, null, e.message, false);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.onSubmitHandler} className='form'>\n          <div className='url_container'>\n            <label htmlFor='url'>\n              <input\n                onChange={this.onChangeHandler}\n                type='url'\n                value={this.props.url}\n                name='url'\n                id='url'\n              />\n            </label>\n            <button type='submit'>GO!</button>\n          </div>\n          <div className='methods_container'>\n            <div onChange={this.onChangeHandler}>\n              <label\n                htmlFor='get-method'\n                className={`${this.props.method === 'get' ? 'active' : ''}`}\n              >\n                GET\n                <input\n                  defaultChecked\n                  type='radio'\n                  value='get'\n                  name='method'\n                  id='get-method'\n                />\n              </label>\n              <label\n                htmlFor='post-method'\n                className={`${this.props.method === 'post' ? 'active' : ''}`}\n              >\n                POST\n                <input\n                  type='radio'\n                  value='post'\n                  name='method'\n                  id='post-method'\n                />\n              </label>\n              <label\n                htmlFor='put-method'\n                className={`${this.props.method === 'put' ? 'active' : ''}`}\n              >\n                PUT\n                <input type='radio' value='put' name='method' id='put-method' />\n              </label>\n              <label\n                htmlFor='delete-method'\n                className={`${this.props.method === 'delete' ? 'active' : ''}`}\n              >\n                DELETE\n                <input\n                  type='radio'\n                  value='delete'\n                  name='method'\n                  id='delete-method'\n                />\n              </label>\n            </div>\n            <textarea\n              className='req-body'\n              placeholder='Request body'\n              name='body'\n              id='body'\n              cols='30'\n              rows='10'\n              value={this.props.body}\n              onChange={this.onChangeHandler}\n            ></textarea>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n  return <footer className='footer'>&copy; 2021 Code Fellows</footer>;\n}\n\nexport default Footer;\n","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport './Results.scss';\nimport { If, Then, Else } from 'react-if';\n\nfunction Results(props) {\n\n  return (\n    <>\n    <div className='results_container'>\n      <If condition={props.loading}>\n          <Then>\n              <div className='loading'></div>\n          </Then>\n          <Else>\n            <If condition={props.results !== null}>\n              <Then>\n                <h2>Headers</h2>\n                <JSONPretty\n                  id='json-pretty'\n                  data={{\n                    headers: props.headers,\n                  }}\n                  />\n\n                <h2>Count</h2>\n                <span>{props.count}</span>\n\n                <h2>Results</h2>\n                <JSONPretty\n                  id='json-pretty'\n                  data={{\n                    results: props.results,\n                  }}\n                  />\n              </Then>\n              <Else>\n                  <div className='error'>{props.error}</div>\n              </Else>\n            </If>\n          </Else>\n      </If>\n    </div>\n      {/* <div className='results_container'>\n        {props.results !== null ? (\n          <>\n            <h2>Headers</h2>\n            <JSONPretty\n              id='json-pretty'\n              data={{\n                headers: props.headers,\n              }}\n            />\n\n            <h2>Count</h2>\n            <span>{props.count}</span>\n\n            <h2>Results</h2>\n            <JSONPretty\n              id='json-pretty'\n              data={{\n                results: props.results,\n              }}\n            />\n          </>\n        ) : (\n          <div className='error'>{props.error}</div>\n        )}\n      </div> */}\n    </>\n  );\n}\n\nexport default Results;\n","import React from 'react';\nimport './History.scss';\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  onClickHandler(req) {\n    this.props.updateFormHandler({ \n        url: req.url,\n        method: req.method,\n        body: req.body\n     });\n  }\n\n  render() {\n    return (\n      <div className='history_container'>\n        {this.props.history.map((req, index) => {\n          return (\n            <div key={index} className='history_row'>\n              <span\n                className={`method ${req.method}`}\n                onClick={() => this.onClickHandler(req)}\n              >\n                {req.method}\n              </span>\n              <span className='urls'>{req.url}</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default History;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\nimport Footer from './components/Footer/Footer';\nimport './App.scss';\nimport Results from './components/Results/Results';\nimport History from './components/History/History';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: null,\n      headers: null,\n      results: null,\n      error: null,\n      loading: false,\n      history: [],\n      url: 'https://swapi.dev/api/people/',\n      method: 'get',\n      body: ''\n    };\n\n    this.updateResultsHandler = this.updateResultsHandler.bind(this);\n    this.updateHistoryHandler = this.updateHistoryHandler.bind(this);\n    this.updateFormHandler = this.updateFormHandler.bind(this);\n  }\n\n  updateResultsHandler(count, headers, results, error, loading) {\n    this.setState({ count, headers, results, error, loading });\n  }\n\n  updateHistoryHandler(history) {\n    this.setState({ history });\n  }\n  \n  updateFormHandler(form) {\n    this.setState({ ...form });\n  }\n  componentDidMount(){\n    const history = JSON.parse(localStorage.getItem('requests'));\n    this.setState({history});\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Header />\n        <Form\n          url={this.state.url}\n          method={this.state.method}\n          body={this.state.body}\n          updateFormHandler={this.updateFormHandler}\n          updateResultsHandler={this.updateResultsHandler}\n          updateHistoryHandler={this.updateHistoryHandler}\n           />\n        <div className='results_body'>\n          <History \n            history={this.state.history}\n            updateFormHandler={this.updateFormHandler}\n          />\n          <Results\n            count={this.state.count}\n            headers={this.state.headers}\n            results={this.state.results}\n            error={this.state.error}\n            loading={this.state.loading}\n          />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}